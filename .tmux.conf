#set-option -g default-command "reattach-to-user-namespace zsh"
#set-option -g default-command "reattach-to-user-namespace fish"
set-option -g prefix C-z
# set-option -g prefix C-a
unbind-key C-b
#bind-key z send-prefix # Sending C-z breaks myterminals anyways

unbind-key C-b
bind-key ^[ last-window

# we might need C-z at some point, allow switching
# we can also send the prefix char with C-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix C-z

bind-key C-a copy-mode
bind-key a copy-mode

# Make copy mode more vi-like
unbind-key [
#bind-key Escape copy-mode
unbind-key p
bind-key p run "xclip -o -selection clipboard | tmux load-buffer - ; tmux paste-buffer"
#bind-key p run "tmux set-buffer -- \"$(xclip -o)\" \; tmux paste-buffer"
#bind-key p run "tmux set-buffer -- \"$(pbpaste)\" \; tmux paste-buffer"
#bind-key p run "tmux set-buffer -- \"$(pbpaste)\" \; tmux paste-buffer"
#bind-key p run "tmux set-buffer -- \"$(reattach-to-user-namespace pbpaste)\" \;" paste-buffer
#bind-key p paste-buffer
#bind-key p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
#bind-key p run "reattach-to-user-namespace pbpaste | tmux load-buffer - \;" paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy y copy-pipe 'xclip -i -selection clipboard'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -selection clipboard'
#bind-key -t vi-copy 'y' copy-pipe 'xclip -i -selection clipboard -selection primary; echo "Copied"'

#bind-key -t vi-copy 'y' copy-selection \; run 'tmux show-buffer | xclip -i -selection clipboard'
#bind-key -t vi-copy 'y' copy-selection \; run 'tmux save-buffer - | xclip -i -selection clipboard'
#bind-key -t vi-copy 'y' copy-selection \; run 'tmux save-buffer - | xsel -i -b -s'
#bind-key -t vi-copy 'y' copy-selection \; run 'tmux save-buffer - | xclip -i -selection clipboard -selection primary'
#bind-key -t vi-copy 'y' copy-pipe 'reattach-to-user-namespace pbcopy'
#bind-key -t vi-copy 'y' copy-pipe 'pbcopy'

# Allows us to send commands to a TMUX session inside 
# another TMUX session
bind-key C-z send-prefix
bind-key z send-prefix


# 0 is too far from ` ;)
set -g base-index 1

set-option -g default-terminal "screen-256color"
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
#set-option -g visual-bell on

setw -g mode-keys vi
#setw -g mode-mouse copy-mode
#setw -g mode-mouse on
setw -g monitor-activity on

bind-key e previous-window
bind-key f next-window
bind-key -r , previous-window
bind-key -r . next-window
bind-key -n M-C-k previous-window
bind-key -n M-C-j next-window
bind-key j select-pane -D
bind-key k select-pane -U

unbind-key h
unbind-key l
bind-key h select-pane -L
bind-key l select-pane -R
bind-key | split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'
bind-key w split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

bind-key m choose-window

#set-option -g status-utf8 on
# set-option -g status-justify centre
set-option -g status-justify left
set-option -g status-bg default
set-option -g status-fg white
set-option -g status-left-length 40

set-option -g pane-active-border-fg magenta
set-option -g pane-active-border-bg default
set-option -g pane-border-fg white
set-option -g pane-border-bg black

set-option -g message-fg magenta
set-option -g message-bg default

#setw -g mode-bg black

setw -g window-status-bg default
setw -g window-status-current-fg cyan
#setw -g window-status-alert-attr default
#setw -g window-status-alert-fg yellow

#set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
#set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

#set -g history-limit 4096
set -g history-limit 100000

bind-key c confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key C-c confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key x new-window -c '#{pane_current_path}'
bind-key C-x new-window -c '#{pane_current_path}'

# `+r reloads the configuration, handy
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
#set -g status-bg black
#set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green][#H %H:%M]"
#set -g status-right ""

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

